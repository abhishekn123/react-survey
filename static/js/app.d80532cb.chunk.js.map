{"version":3,"sources":["assets/survey.png","Login/login.js","Vote/vote.js","Register/Register.js","ForgotPassword/ForgotPassword.js","Admin/admin.js","AdminScreen/adminscreen.js","Home/Home.js","App.js","web-build/register-service-worker.js"],"names":["module","exports","Loginser","props","content","React","useState","Email","onChangeEmail","Password","onChangePassword","IfIslogedIn","logintheuser","ActivityIndicator","size","color","style","styles","Activity","View","TouchableHighlight","button","onPress","data","email","password","fetch","method","headers","Accept","body","JSON","stringify","then","response","ok","json","Platform","OS","message","ToastAndroid","show","CENTER","LONG","AsyncStorage","setItem","navigation","navigate","err","catch","error","alert","localStorage","console","log","login","Text","Register","forgot","admin","view","Image","source","require","logo","TextInput","Textinput","onChangeText","text","placeholder","textContentType","secureTextEntry","returnKeyType","StyleSheet","create","height","width","borderColor","borderWidth","marginTop","alignItems","justifyContent","alignSelf","textAlign","flex","backgroundColor","Vote","like","setlike","dislike","setdislike","btnstate","setbtnstate","sendInterest","getItem","authtoken","useEffect","BackHandler","addEventListener","removeEventListener","container","name","Button","title","checkbox","margin","ConfirmPassword","onChangeConfirmPassword","IfIsRegistered","Registertheuser","localeCompare","Response","code","String","paddingTop","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginLeft","goBack","ForgotPass","RestPassword","setResetPassword","setEmail","ResetPassword","loginAdmin","adminscreen","screenWidth","Dimensions","get","interest","notinterest","userdata","setdata","labels","datasets","reset","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","opacity","borderRadius","yAxisLabel","verticalLabelRotation","marginVertical","fromZero","Stack","createStackNavigator","Home","NavigationContainer","Navigator","initialRouteName","headerMode","Screen","component","options","TransitionPresets","FadeFromBottomAndroid","App","navigator","window","serviceWorker","register","scope","info"],"mappings":"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","file":"static/js/app.d80532cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/survey.1490de31.png\";","import React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  Button,\r\n  Alert,\r\n  TouchableHighlight,\r\n  Image,\r\n  ToastAndroid,\r\n  Platform,\r\n  ActivityIndicator,\r\n  AsyncStorage,\r\n} from \"react-native\";\r\n\r\nexport default function Loginser(props) {\r\n  const [Email, onChangeEmail] = React.useState(\"Email\");\r\n  const [Password, onChangePassword] = React.useState(\"Password\");\r\n  const [IfIslogedIn, logintheuser] = React.useState(false);\r\n  let content;\r\n  if (!IfIslogedIn) {\r\n    content = (\r\n      <View>\r\n        <TouchableHighlight style={styles.button} onPress={() => login()}>\r\n          <Text style={styles.Text}>LOGIN</Text>\r\n        </TouchableHighlight>\r\n        <TouchableHighlight\r\n          style={styles.Register}\r\n          onPress={() => props.navigation.navigate(\"register\")}\r\n        >\r\n          <Text style={styles.Text}>REGISTER</Text>\r\n        </TouchableHighlight>\r\n        <TouchableHighlight\r\n          style={styles.forgot}\r\n          onPress={() => props.navigation.navigate(\"forgotpass\")}\r\n        >\r\n          <Text style={styles.Text}>FORGOT PASSWORD</Text>\r\n        </TouchableHighlight>\r\n        <TouchableHighlight\r\n          style={styles.admin}\r\n          onPress={() => props.navigation.navigate(\"admin\")}\r\n        >\r\n          <Text style={styles.Text}>ADMIN</Text>\r\n        </TouchableHighlight>\r\n      </View>\r\n    );\r\n  } else {\r\n    content = (\r\n      <ActivityIndicator size=\"large\" color=\"#00ff00\" style={styles.Activity} />\r\n    );\r\n  }\r\n  function login() {\r\n    logintheuser(true);\r\n    let data = {\r\n      email: Email,\r\n      password: Password,\r\n    };\r\n    let url = \"https://us-central1-survey-55706.cloudfunctions.net/Login/login\";\r\n    fetch(\"https://us-central1-survey-55706.cloudfunctions.net/Login/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: Email,\r\n        password: Password,\r\n      }),\r\n    })\r\n      .then(\r\n        (response) => {\r\n          if (response.ok) {\r\n            response.json().then((data) => {\r\n              logintheuser(false);\r\n              if (response.ok) {\r\n                if (Platform.OS === \"android\") {\r\n                  if (data.message) {\r\n                    ToastAndroid.show(\r\n                      data.message,\r\n                      ToastAndroid.CENTER,\r\n                      ToastAndroid.LONG\r\n                    );\r\n                  } else {\r\n                    try {\r\n                      AsyncStorage.setItem(\"acess-token\", data[\"acess-token\"])\r\n                        .then(\r\n                          () => {\r\n                            props.navigation.navigate(\"vote\");\r\n                          },\r\n                          (err) => {\r\n                            ToastAndroid.show(\r\n                              err,\r\n                              ToastAndroid.CENTER,\r\n                              ToastAndroid.LONG\r\n                            );\r\n                          }\r\n                        )\r\n                        .catch((err) => {\r\n                          ToastAndroid.show(\r\n                            err,\r\n                            ToastAndroid.CENTER,\r\n                            ToastAndroid.LONG\r\n                          );\r\n                        });\r\n                    } catch (error) {\r\n                      ToastAndroid.show(\r\n                        error,\r\n                        error,\r\n                        ToastAndroid.CENTER,\r\n                        ToastAndroid.LONG\r\n                      );\r\n                    }\r\n                    props.navigation.navigate(\"vote\");\r\n                  }\r\n                } else {\r\n                  if (data.message) {\r\n                    if (Platform.OS === \"android\") {\r\n                      ToastAndroid.show(\r\n                        data.message,\r\n                        ToastAndroid.CENTER,\r\n                        ToastAndroid.LONG\r\n                      );\r\n                    } else alert(data.message);\r\n                  } else {\r\n                    localStorage.setItem(\"acess-token\", data[\"acess-token\"]);\r\n                    props.navigation.navigate(\"vote\");\r\n                  }\r\n                }\r\n              } else {\r\n                logintheuser(false);\r\n                if (Platform.OS === \"android\") {\r\n                  ToastAndroid.show(\r\n                    data.message,\r\n                    ToastAndroid.CENTER,\r\n                    ToastAndroid.LONG\r\n                  );\r\n                } else {\r\n                  logintheuser(false);\r\n                  alert(data.message);\r\n                }\r\n              }\r\n            });\r\n          } else {\r\n            console.log(\"else error\");\r\n            logintheuser(false);\r\n            if (Platform.OS === \"android\") {\r\n              ToastAndroid.show(\r\n                data.message,\r\n                ToastAndroid.CENTER,\r\n                ToastAndroid.LONG\r\n              );\r\n            } else {\r\n              logintheuser(false);\r\n              alert(\"EMAIL PASSWORD INCORRECT\");\r\n            }\r\n          }\r\n        },\r\n        (err) => {\r\n          console.log(\"promise failed\");\r\n          logintheuser(false);\r\n          alert(err);\r\n        }\r\n      )\r\n      .catch((err) => {\r\n        logintheuser(false);\r\n        console.log(err);\r\n      });\r\n  }\r\n  return (\r\n    <View style={styles.view}>\r\n      <Image source={require(\"../assets/survey.png\")} style={styles.logo} />\r\n      <TextInput\r\n        style={styles.Textinput}\r\n        onChangeText={(text) => onChangeEmail(text)}\r\n        placeholder=\"Enter your email\"\r\n        textContentType=\"emailAddress\"\r\n      />\r\n      <TextInput\r\n        style={styles.Textinput}\r\n        onChangeText={(text) => onChangePassword(text)}\r\n        placeholder=\" Enter Your Password\"\r\n        secureTextEntry={true}\r\n        returnKeyType=\"go\"\r\n        textContentType=\"password\"\r\n      />\r\n      <View>{content}</View>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  Textinput: {\r\n    height: 40,\r\n    width: \"90%\",\r\n    borderColor: \"gray\",\r\n    borderWidth: 1,\r\n    marginTop: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    alignSelf: \"center\",\r\n    textAlign: \"center\",\r\n  },\r\n  view: {\r\n    flex: 1,\r\n    marginTop: Platform.OS === \"android\" ? \"30%\" : \"10%\",\r\n  },\r\n  button: {\r\n    marginTop: 50,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#303f9f\",\r\n    justifyContent: \"center\",\r\n    width: \"90%\",\r\n    alignSelf: \"center\",\r\n  },\r\n  Text: {\r\n    color: \"#fafafa\",\r\n  },\r\n  logo: {\r\n    width: 100,\r\n    height: 100,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"center\",\r\n  },\r\n  Activity: {\r\n    marginTop: 30,\r\n  },\r\n  Register: {\r\n    marginTop: 10,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#ff3d00\",\r\n    justifyContent: \"center\",\r\n    width: \"90%\",\r\n    alignSelf: \"center\",\r\n  },\r\n  forgot: {\r\n    marginTop: 10,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#b2ff59\",\r\n    justifyContent: \"center\",\r\n    width: \"90%\",\r\n    alignSelf: \"center\",\r\n  },\r\n  admin: {\r\n    marginTop: 10,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#ffc107\",\r\n    justifyContent: \"center\",\r\n    width: \"90%\",\r\n    alignSelf: \"center\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  CheckBox,\r\n  Button,\r\n  ActivityIndicator,\r\n  AsyncStorage,\r\n  ToastAndroid,\r\n  Platform,\r\n  BackHandler,\r\n} from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/AntDesign\";\r\nexport default function Vote(props) {\r\n  const [like, setlike] = React.useState(\"like2\");\r\n  const [dislike, setdislike] = React.useState(\"dislike2\");\r\n  const [btnstate, setbtnstate] = React.useState(1);\r\n  React.useEffect(() => {\r\n    BackHandler.addEventListener(\"hardwareBackPress\", () => true);\r\n    return () =>\r\n      BackHandler.removeEventListener(\"hardwareBackPress\", () => true);\r\n  }, []);\r\n\r\n  function voteNotInterest() {\r\n    let token = AsyncStorage.getItem(\"acess-token\");\r\n    token.then(\r\n      (data) => {\r\n        console.log(data);\r\n        fetch(\r\n          \"https://us-central1-survey-55706.cloudfunctions.net/Vote/voteNotInterested\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              authtoken: data,\r\n            }),\r\n          }\r\n        )\r\n          .then(\r\n            (response) => {\r\n              response.json().then((data) => {\r\n                if (Platform.OS === \"android\") {\r\n                  ToastAndroid.show(\r\n                    data.message,\r\n                    ToastAndroid.CENTER,\r\n                    ToastAndroid.LONG\r\n                  );\r\n                  if (response.ok) {\r\n                    props.navigation.navigate(\"login\");\r\n                  }\r\n                } else {\r\n                  alert(data.message);\r\n                  if (response.ok) {\r\n                    props.navigation.navigate(\"login\");\r\n                  }\r\n                }\r\n              });\r\n            },\r\n            (err) => {\r\n              ToastAndroid.show(err, ToastAndroid.CENTER, ToastAndroid.LONG);\r\n            }\r\n          )\r\n          .catch((err) => {\r\n            ToastAndroid.show(err, ToastAndroid.CENTER, ToastAndroid.LONG);\r\n          });\r\n      },\r\n      (err) => {\r\n        alert(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  function voteInterest() {\r\n    let token = AsyncStorage.getItem(\"acess-token\");\r\n    token.then(\r\n      (data) => {\r\n        console.log(data);\r\n        fetch(\r\n          \"https://us-central1-survey-55706.cloudfunctions.net/Vote/voteInterested\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              authtoken: data,\r\n            }),\r\n          }\r\n        )\r\n          .then(\r\n            (response) => {\r\n              console.log(\"posted sucesfully\");\r\n              response.json().then((data) => {\r\n                console.log(\"inside response.json\");\r\n                if (Platform.OS === \"android\") {\r\n                  console.log(\"inside Platform\");\r\n                  ToastAndroid.show(\r\n                    data.message,\r\n                    ToastAndroid.CENTER,\r\n                    ToastAndroid.LONG\r\n                  );\r\n                  if (response.ok) {\r\n                    props.navigation.navigate(\"login\");\r\n                  }\r\n                } else {\r\n                  alert(data.message);\r\n                  if (response.ok) {\r\n                    props.navigation.navigate(\"login\");\r\n                  }\r\n                }\r\n              });\r\n            },\r\n            (err) => {\r\n              ToastAndroid.show(\r\n                (err = \"from posting\"),\r\n                ToastAndroid.CENTER,\r\n                ToastAndroid.LONG\r\n              );\r\n            }\r\n          )\r\n          .catch((err) => {\r\n            ToastAndroid.show(err, ToastAndroid.CENTER, ToastAndroid.LONG);\r\n          });\r\n      },\r\n      (err) => {\r\n        alert(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  function sendInterest() {\r\n    setbtnstate(0);\r\n    if (like === \"like1\") {\r\n      voteInterest();\r\n    } else {\r\n      voteNotInterest();\r\n    }\r\n  }\r\n  function setInterests() {\r\n    like === \"like2\" ? setlike(\"like1\") : setlike(\"like2\");\r\n    setdislike(\"dislike2\");\r\n  }\r\n  function disinterest() {\r\n    dislike === \"dislike2\" ? setdislike(\"dislike1\") : setdislike(\"dislike2\");\r\n    setlike(\"like2\");\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={{ flex: 0.4, justifyContent: \"center\" }}>\r\n        <Icon\r\n          name={like}\r\n          size={80}\r\n          color=\"#76ff03\"\r\n          onPress={() => setInterests()}\r\n        />\r\n      </View>\r\n      <View style={{ flex: 0.4, justifyContent: \"flex-start\" }}>\r\n        <Icon\r\n          name={dislike}\r\n          size={80}\r\n          color=\"#76ff03\"\r\n          onPress={() => disinterest()}\r\n        />\r\n      </View>\r\n      <View style={{ flex: 0.4, justifyContent: \"center\" }}>\r\n        {btnstate === 1 && (like === \"like1\" || dislike === \"dislike1\") ? (\r\n          <Button\r\n            title={\"SUBMIT\"}\r\n            color={\"#ff3d00\"}\r\n            onPress={() => sendInterest()}\r\n          />\r\n        ) : (\r\n          <Text></Text>\r\n        )}\r\n        {btnstate === 0 ? (\r\n          <ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n        ) : (\r\n          <Text></Text>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  checkbox: {\r\n    margin: 10,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableHighlight,\r\n  TextInput,\r\n  Platform,\r\n  ToastAndroid,\r\n  ActivityIndicator,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\nexport default function Register(props) {\r\n  const [Email, onChangeEmail] = React.useState(\"Email\");\r\n  const [Password, onChangePassword] = React.useState(\"\");\r\n  const [ConfirmPassword, onChangeConfirmPassword] = React.useState(\"\");\r\n  const [IfIsRegistered, Registertheuser] = React.useState(false);\r\n  var content;\r\n  if (!IfIsRegistered) {\r\n    content = (\r\n      <View>\r\n        <View>\r\n          <TouchableHighlight\r\n            style={styles.button}\r\n            onPress={() => RegisterUser(props)}\r\n          >\r\n            <Text style={styles.Text}>REGISTER</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n      </View>\r\n    );\r\n  } else {\r\n    content = (\r\n      <ActivityIndicator size=\"large\" color=\"#1a237e\" style={styles.Activity} />\r\n    );\r\n  }\r\n\r\n  function RegisterUser(pop) {\r\n    Registertheuser(true);\r\n    if (\r\n      Password.localeCompare(ConfirmPassword) === 0 &&\r\n      Password != \"\" &&\r\n      ConfirmPassword != \"\"\r\n    ) {\r\n      fetch(\r\n        \"https://us-central1-survey-55706.cloudfunctions.net/Register/register\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email: Email,\r\n            password: Password,\r\n          }),\r\n        }\r\n      ).then(\r\n        (Response) => {\r\n          Registertheuser(false);\r\n          if (Response.ok) {\r\n            Response.json().then(\r\n              (data) => {\r\n                if (Platform.OS === \"android\") {\r\n                  ToastAndroid.show(\r\n                    data.message,\r\n                    ToastAndroid.CENTER,\r\n                    ToastAndroid.LONG\r\n                  );\r\n                  props.navigation.navigate(\"login\");\r\n                } else {\r\n                  alert(data.message);\r\n                  props.navigation.navigate(\"login\");\r\n                }\r\n              },\r\n              (err) => {\r\n                if (Platform.OS === \"android\") {\r\n                  ToastAndroid.show(\r\n                    err,\r\n                    ToastAndroid.CENTER,\r\n                    ToastAndroid.LONG\r\n                  );\r\n                } else {\r\n                  alert(err);\r\n                }\r\n              }\r\n            );\r\n          } else {\r\n            Response.json().then(\r\n              (data) => {\r\n                if (Platform.OS === \"android\") {\r\n                  ToastAndroid.show(\r\n                    typeof data.message.code === String\r\n                      ? data.message.code\r\n                      : data.message.code.message,\r\n                    ToastAndroid.CENTER,\r\n                    ToastAndroid.LONG\r\n                  );\r\n                  //props.navigation.navigate(\"login\");\r\n                } else {\r\n                  alert(\r\n                    typeof data.message.code === String\r\n                      ? data.message.code\r\n                      : data.message.code.message\r\n                  );\r\n                  // props.navigation.navigate(\"login\");\r\n                }\r\n              },\r\n              (err) => {\r\n                if (Platform.OS === \"android\") {\r\n                  ToastAndroid.show(\r\n                    err,\r\n                    ToastAndroid.CENTER,\r\n                    ToastAndroid.LONG\r\n                  );\r\n                } else {\r\n                  alert(err);\r\n                }\r\n              }\r\n            );\r\n          }\r\n        },\r\n        (err) => {\r\n          if (Platform.OS === \"android\") {\r\n            ToastAndroid.show(err, ToastAndroid.CENTER, ToastAndroid.LONG);\r\n          } else {\r\n            alert(err);\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      Registertheuser(false);\r\n      if (Platform.OS === \"android\") {\r\n        ToastAndroid.show(\r\n          \"password Doesnot Match\",\r\n          ToastAndroid.CENTER,\r\n          ToastAndroid.LONG\r\n        );\r\n      } else {\r\n        alert(\"password Doesnot Match\");\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <View style={{ marginTop: 0, paddingTop: 0 }}>\r\n      <View\r\n        style={{\r\n          paddingTop: Platform.OS === \"android\" ? 25 : 0,\r\n          shadowColor: \"#000\",\r\n          shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n          },\r\n          shadowOpacity: 1,\r\n          shadowRadius: 3.84,\r\n\r\n          elevation: 5,\r\n        }}\r\n      >\r\n        <Icon\r\n          name={\"md-arrow-back\"}\r\n          size={40}\r\n          style={{ margin: 5, marginLeft: 8 }}\r\n          onPress={() => props.navigation.goBack()}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.view}>\r\n        <TextInput\r\n          style={styles.Textinput}\r\n          onChangeText={(text) => onChangeEmail(text)}\r\n          placeholder=\"Enter your email\"\r\n          textContentType=\"emailAddress\"\r\n        />\r\n        <TextInput\r\n          style={styles.Textinput}\r\n          onChangeText={(text) => onChangePassword(text)}\r\n          placeholder=\" Enter New Password\"\r\n          secureTextEntry={true}\r\n          returnKeyType=\"go\"\r\n          textContentType=\"newPassword\"\r\n        />\r\n        <TextInput\r\n          style={styles.Textinput}\r\n          onChangeText={(text) => onChangeConfirmPassword(text)}\r\n          placeholder=\"Confirm Password\"\r\n          secureTextEntry={true}\r\n          returnKeyType=\"go\"\r\n          textContentType=\"password\"\r\n        />\r\n        <View>{content}</View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  Textinput: {\r\n    height: 40,\r\n    width: \"90%\",\r\n    borderColor: \"gray\",\r\n    borderWidth: 1,\r\n    marginTop: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    alignSelf: \"center\",\r\n    textAlign: \"center\",\r\n  },\r\n  view: {\r\n    flex: 1,\r\n    marginTop: Platform.OS === \"android\" ? \"40%\" : \"20%\",\r\n  },\r\n  button: {\r\n    marginTop: 50,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#303f9f\",\r\n    justifyContent: \"center\",\r\n    width: \"90%\",\r\n    alignSelf: \"center\",\r\n  },\r\n  Text: {\r\n    color: \"#fafafa\",\r\n  },\r\n  logo: {\r\n    width: 100,\r\n    height: 100,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"center\",\r\n  },\r\n  Activity: {\r\n    marginTop: 30,\r\n  },\r\n  Register: {\r\n    marginTop: 10,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#ff3d00\",\r\n    justifyContent: \"center\",\r\n    width: \"90%\",\r\n    alignSelf: \"center\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableHighlight,\r\n  ToastAndroid,\r\n  TextInput,\r\n  Platform,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\n\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\nexport default function ForgotPass(props) {\r\n  var content;\r\n  const [RestPassword, setResetPassword] = React.useState(false);\r\n  const [Email, setEmail] = React.useState(\"\");\r\n  function ResetPassword() {\r\n    if (Email === \"\") {\r\n      if (Platform.OS === \"android\") {\r\n        ToastAndroid.show(\r\n          \"Email Feild Cannot Be Empty\",\r\n          ToastAndroid.CENTER,\r\n          ToastAndroid.LONG\r\n        );\r\n        return;\r\n      } else {\r\n        alert(\"Email Cannot Be Empty\");\r\n        return;\r\n      }\r\n    }\r\n    setResetPassword(true);\r\n    fetch(\r\n      \"https://us-central1-survey-55706.cloudfunctions.net/ForgotPass/forgotpass\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email: Email,\r\n        }),\r\n      }\r\n    )\r\n      .then(\r\n        (response) => {\r\n          if (response.ok) {\r\n            setResetPassword(false);\r\n            response\r\n              .json()\r\n              .then(\r\n                (data) => {\r\n                  if (Platform.OS === \"android\") {\r\n                    ToastAndroid.show(\r\n                      data.message ? data.message : data.message.message,\r\n                      ToastAndroid.CENTER,\r\n                      ToastAndroid.LONG\r\n                    );\r\n                  } else {\r\n                    alert(data.message ? data.message : data.message.message);\r\n                  }\r\n                  props.navigation.navigate(\"login\");\r\n                },\r\n                (err) => {\r\n                  if (Platform.OS === \"android\") {\r\n                    ToastAndroid.show(\r\n                      err.message.message ? err.message.message : err.message,\r\n                      ToastAndroid.CENTER,\r\n                      ToastAndroid.LONG\r\n                    );\r\n                  } else {\r\n                    alert(err);\r\n                  }\r\n                }\r\n              )\r\n              .catch((err) => {\r\n                setResetPassword(false);\r\n                if (Platform.OS === \"android\") {\r\n                  ToastAndroid.show(\r\n                    err.message.message ? err.message.message : err.message,\r\n                    ToastAndroid.CENTER,\r\n                    ToastAndroid.LONG\r\n                  );\r\n                } else {\r\n                  alert(err.message.message);\r\n                }\r\n              });\r\n          } else {\r\n            setResetPassword(false);\r\n            response.json().then(\r\n              (data) => {\r\n                if (Platform.OS === \"android\") {\r\n                  ToastAndroid.show(\r\n                    data.message.message ? data.message.message : data.message,\r\n                    ToastAndroid.CENTER,\r\n                    ToastAndroid.LONG\r\n                  );\r\n                } else {\r\n                  alert(\r\n                    data.message.message ? data.message.message : data.message\r\n                  );\r\n                }\r\n              },\r\n              (err) => {\r\n                if (Platform.OS === \"android\") {\r\n                  ToastAndroid.show(\r\n                    err.message.message,\r\n                    ToastAndroid.CENTER,\r\n                    ToastAndroid.LONG\r\n                  );\r\n                } else {\r\n                  alert(err);\r\n                }\r\n              }\r\n            );\r\n          }\r\n        },\r\n        (err) => {\r\n          setResetPassword(false);\r\n          if (Platform.OS === \"android\") {\r\n            ToastAndroid.show(\r\n              err.message.message,\r\n              ToastAndroid.CENTER,\r\n              ToastAndroid.LONG\r\n            );\r\n          } else {\r\n            alert(err);\r\n          }\r\n        }\r\n      )\r\n      .catch((err) => {\r\n        setResetPassword(false);\r\n        if (Platform.OS === \"android\") {\r\n          ToastAndroid.show(\r\n            err.message.message,\r\n            ToastAndroid.CENTER,\r\n            ToastAndroid.LONG\r\n          );\r\n        } else {\r\n          alert(err);\r\n        }\r\n      });\r\n  }\r\n  if (!RestPassword) {\r\n    content = (\r\n      <View>\r\n        <TouchableHighlight\r\n          style={{\r\n            marginTop: 50,\r\n            height: 50,\r\n            alignItems: \"center\",\r\n            backgroundColor: \"#303f9f\",\r\n            justifyContent: \"center\",\r\n            width: \"90%\",\r\n            alignSelf: \"center\",\r\n          }}\r\n          onPress={() => ResetPassword()}\r\n        >\r\n          <Text style={{ color: \"#fafafa\" }}>RESET PASSWORD</Text>\r\n        </TouchableHighlight>\r\n      </View>\r\n    );\r\n  } else {\r\n    content = (\r\n      <ActivityIndicator\r\n        size=\"large\"\r\n        color=\"#1a237e\"\r\n        style={{ marginTop: 10 }}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <View>\r\n      <View style={{ marginTop: 0, paddingTop: 0 }}>\r\n        <View\r\n          style={{\r\n            paddingTop: Platform.OS === \"android\" ? 25 : 0,\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {\r\n              width: 0,\r\n              height: 2,\r\n            },\r\n            shadowOpacity: 1,\r\n            shadowRadius: 3.84,\r\n\r\n            elevation: 5,\r\n          }}\r\n        >\r\n          <Icon\r\n            name={\"md-arrow-back\"}\r\n            size={40}\r\n            style={{ margin: 5, marginLeft: 8 }}\r\n            onPress={() => props.navigation.goBack()}\r\n          />\r\n        </View>\r\n      </View>\r\n      <TextInput\r\n        style={{\r\n          height: 40,\r\n          width: \"90%\",\r\n          borderColor: \"gray\",\r\n          borderWidth: 1,\r\n          marginTop: 50,\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          alignSelf: \"center\",\r\n          textAlign: \"center\",\r\n        }}\r\n        onChangeText={(text) => setEmail(text)}\r\n        placeholder=\"Enter your email\"\r\n        textContentType=\"emailAddress\"\r\n      />\r\n      {content}\r\n    </View>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  Button,\r\n  Alert,\r\n  TouchableHighlight,\r\n  Image,\r\n  ToastAndroid,\r\n  Platform,\r\n  ActivityIndicator,\r\n  AsyncStorage,\r\n} from \"react-native\";\r\n\r\nexport default function admin(props) {\r\n  const [Email, onChangeEmail] = React.useState(\"Email\");\r\n  const [Password, onChangePassword] = React.useState(\"Password\");\r\n  const [IfIslogedIn, logintheuser] = React.useState(false);\r\n  let content;\r\n  if (!IfIslogedIn) {\r\n    content = (\r\n      <View>\r\n        <TouchableHighlight style={styles.button} onPress={() => loginAdmin()}>\r\n          <Text style={styles.Text}>LOGIN ADMIN</Text>\r\n        </TouchableHighlight>\r\n      </View>\r\n    );\r\n  } else {\r\n    content = (\r\n      <ActivityIndicator size=\"large\" color=\"#00ff00\" style={styles.Activity} />\r\n    );\r\n  }\r\n  function loginAdmin() {\r\n    logintheuser(true);\r\n    let data = {\r\n      email: Email,\r\n      password: Password,\r\n    };\r\n    fetch(\"https://us-central1-survey-55706.cloudfunctions.net/Admin/admin\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: Email,\r\n        password: Password,\r\n      }),\r\n    })\r\n      .then(\r\n        (response) => {\r\n          if (response.ok) {\r\n            response.json().then((data) => {\r\n              logintheuser(false);\r\n              props.navigation.navigate(\"adminscreen\");\r\n            });\r\n          } else {\r\n            logintheuser(false);\r\n            response.json().then(\r\n              (data) => {\r\n                if (Platform.OS === \"android\") {\r\n                  ToastAndroid.show(\r\n                    data.message.message ? data.message.message : data.message,\r\n                    ToastAndroid.CENTER,\r\n                    ToastAndroid.LONG\r\n                  );\r\n                } else {\r\n                  logintheuser(false);\r\n                  alert(\r\n                    data.message.message ? data.message.message : data.message\r\n                  );\r\n                }\r\n              },\r\n              (err) => {\r\n                if (Platform.OS === \"android\") {\r\n                  ToastAndroid.show(\r\n                    err.message.message ? err.message.message : err.message,\r\n                    ToastAndroid.CENTER,\r\n                    ToastAndroid.LONG\r\n                  );\r\n                } else {\r\n                  logintheuser(false);\r\n                  alert(\r\n                    err.message.message ? err.message.message : err.message\r\n                  );\r\n                }\r\n              }\r\n            );\r\n          }\r\n        },\r\n        (err) => {\r\n          logintheuser(false);\r\n          alert(err);\r\n        }\r\n      )\r\n      .catch((err) => {\r\n        logintheuser(false);\r\n        console.log(err);\r\n      });\r\n  }\r\n  return (\r\n    <View style={styles.view}>\r\n      <Image source={require(\"../assets/survey.png\")} style={styles.logo} />\r\n      <TextInput\r\n        style={styles.Textinput}\r\n        onChangeText={(text) => onChangeEmail(text)}\r\n        placeholder=\"Enter your email\"\r\n        textContentType=\"emailAddress\"\r\n      />\r\n      <TextInput\r\n        style={styles.Textinput}\r\n        onChangeText={(text) => onChangePassword(text)}\r\n        placeholder=\" Enter Your Password\"\r\n        secureTextEntry={true}\r\n        returnKeyType=\"go\"\r\n        textContentType=\"password\"\r\n      />\r\n      <View>{content}</View>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  Textinput: {\r\n    height: 40,\r\n    width: \"90%\",\r\n    borderColor: \"gray\",\r\n    borderWidth: 1,\r\n    marginTop: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    alignSelf: \"center\",\r\n    textAlign: \"center\",\r\n  },\r\n  view: {\r\n    flex: 1,\r\n    marginTop: Platform.OS === \"android\" ? \"40%\" : \"20%\",\r\n  },\r\n  button: {\r\n    marginTop: 50,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#303f9f\",\r\n    justifyContent: \"center\",\r\n    width: \"90%\",\r\n    alignSelf: \"center\",\r\n  },\r\n  Text: {\r\n    color: \"#fafafa\",\r\n  },\r\n  logo: {\r\n    width: 100,\r\n    height: 100,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"center\",\r\n  },\r\n  Activity: {\r\n    marginTop: 30,\r\n  },\r\n  Register: {\r\n    marginTop: 10,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#ff3d00\",\r\n    justifyContent: \"center\",\r\n    width: \"90%\",\r\n    alignSelf: \"center\",\r\n  },\r\n  forgot: {\r\n    marginTop: 10,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#b2ff59\",\r\n    justifyContent: \"center\",\r\n    width: \"90%\",\r\n    alignSelf: \"center\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  BackHandler,\r\n  Platform,\r\n  ActivityIndicator,\r\n  TouchableHighlight,\r\n  ToastAndroid,\r\n} from \"react-native\";\r\nimport { Dimensions } from \"react-native\";\r\nimport { BarChart, ContributionGraph } from \"react-native-chart-kit\";\r\nexport default function adminscreen(props) {\r\n  const screenWidth = Dimensions.get(\"window\").width;\r\n  const [userdata, setdata] = React.useState({ interest: 0, notinterest: 0 });\r\n  const [IfIslogedIn, logintheuser] = React.useState(false);\r\n  const data = {\r\n    labels: [\"Interest\", \"NotInterest\"],\r\n    datasets: [\r\n      {\r\n        data: [\r\n          userdata.interest ? userdata.interest : 0,\r\n          userdata.notinterest ? userdata.notinterest : 0,\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n  var content = (\r\n    <View>\r\n      <TouchableHighlight\r\n        style={{\r\n          marginTop: 50,\r\n          height: 50,\r\n          alignItems: \"center\",\r\n          backgroundColor: \"#303f9f\",\r\n          justifyContent: \"center\",\r\n          width: \"50%\",\r\n          alignSelf: \"center\",\r\n        }}\r\n        onPress={() => reset()}\r\n      >\r\n        <Text style={{ color: \"#fafafa\" }}>RESET</Text>\r\n      </TouchableHighlight>\r\n    </View>\r\n  );\r\n  function reset() {\r\n    console.log(IfIslogedIn);\r\n    logintheuser(true);\r\n    fetch(\"https://us-central1-survey-55706.cloudfunctions.net/Reset/reset\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        interest: 0,\r\n        notinterest: 0,\r\n      }),\r\n    }).then((response) => {\r\n      if (response.ok) {\r\n        response.json().then(\r\n          (data) => {\r\n            userdata.interest = 0;\r\n            userdata.notinterest = 0;\r\n            logintheuser(false);\r\n            if (Platform.OS === \"android\") {\r\n              ToastAndroid.show(\r\n                data.message.message ? data.message : data.message,\r\n                ToastAndroid.CENTER,\r\n                ToastAndroid.LONG\r\n              );\r\n            } else\r\n              alert(data.message.message ? data.message.message : data.message);\r\n          },\r\n\r\n          (err) => {\r\n            if (Platform.OS === \"android\") {\r\n              ToastAndroid.show(\r\n                err.message.message ? err.message : err.message,\r\n                ToastAndroid.CENTER,\r\n                ToastAndroid.LONG\r\n              );\r\n            } else\r\n              alert(err.message.message ? err.message.message : err.message);\r\n          }\r\n        );\r\n      } else {\r\n        logintheuser(false);\r\n        if (Platform.OS === \"android\") {\r\n          ToastAndroid.show(\r\n            data.message.message ? data.message : data.message,\r\n            ToastAndroid.CENTER,\r\n            ToastAndroid.LONG\r\n          );\r\n        } else\r\n          alert(data.message.message ? data.message.message : data.message);\r\n      }\r\n    });\r\n    console.log(IfIslogedIn);\r\n  }\r\n  const chartConfig = {\r\n    backgroundColor: \"#1cc910\",\r\n    backgroundGradientFrom: \"#eff3ff\",\r\n    backgroundGradientTo: \"#efefef\",\r\n    decimalPlaces: 2,\r\n    color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n    style: {\r\n      borderRadius: 16,\r\n    },\r\n  };\r\n  if (!IfIslogedIn) {\r\n    content = (\r\n      <View>\r\n        <TouchableHighlight\r\n          style={{\r\n            marginTop: 50,\r\n            height: 50,\r\n            alignItems: \"center\",\r\n            backgroundColor: \"#303f9f\",\r\n            justifyContent: \"center\",\r\n            width: \"50%\",\r\n            alignSelf: \"center\",\r\n          }}\r\n          onPress={() => reset()}\r\n        >\r\n          <Text style={{ color: \"#fafafa\" }}>RESET</Text>\r\n        </TouchableHighlight>\r\n      </View>\r\n    );\r\n  } else {\r\n    content = (\r\n      <ActivityIndicator\r\n        size=\"large\"\r\n        color=\"#00ff00\"\r\n        style={{ marginTop: 30 }}\r\n      />\r\n    );\r\n  }\r\n  React.useEffect(() => {\r\n    BackHandler.addEventListener(\"hardwareBackPress\", () => true);\r\n    fetch(\r\n      \"https://us-central1-survey-55706.cloudfunctions.net/AdminAccess/adminaccess\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    ).then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          response.json().then(\r\n            (data) => {\r\n              setdata(data);\r\n              console.log(data);\r\n            },\r\n            (err) => {\r\n              if (Platform.OS === \"android\") {\r\n                ToastAndroid.show(\r\n                  err.message.message ? err.message : err.message,\r\n                  ToastAndroid.CENTER,\r\n                  ToastAndroid.LONG\r\n                );\r\n              } else\r\n                alert(err.message.message ? err.message.message : err.message);\r\n            }\r\n          );\r\n        } else {\r\n          if (Platform.OS === \"android\") {\r\n            ToastAndroid.show(\r\n              \"SOMETHING WENT WRONG\",\r\n              ToastAndroid.CENTER,\r\n              ToastAndroid.LONG\r\n            );\r\n          } else alert(\"SOMETHING WENT WRONG\");\r\n        }\r\n      },\r\n      (err) => {\r\n        if (Platform.OS === \"android\") {\r\n          ToastAndroid.show(\r\n            err.message.message ? err.message.message : err.message,\r\n            ToastAndroid.CENTER,\r\n            ToastAndroid.LONG\r\n          );\r\n        } else alert(err.message.message ? err.message.message : err.message);\r\n      }\r\n    );\r\n    return () =>\r\n      BackHandler.removeEventListener(\"hardwareBackPress\", () => true);\r\n  }, []);\r\n  return (\r\n    <View\r\n      style={{\r\n        flex: 1,\r\n        marginTop: \"30%\",\r\n      }}\r\n    >\r\n      <BarChart\r\n        data={data}\r\n        width={screenWidth}\r\n        height={300}\r\n        yAxisLabel=\"\"\r\n        chartConfig={chartConfig}\r\n        verticalLabelRotation={0}\r\n        style={{\r\n          marginVertical: 8,\r\n          borderRadius: 16,\r\n        }}\r\n        fromZero={true}\r\n      />\r\n      {content}\r\n    </View>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { TransitionPresets } from \"@react-navigation/stack\";\r\nimport Vote from \"./../Vote/vote\";\r\nimport Loginser from \"./../Login/login\";\r\nimport Register from \"../Register/Register\";\r\nimport ForgotPass from \"../ForgotPassword/ForgotPassword\";\r\nimport admin from \"../Admin/admin\";\r\nimport adminscreen from \"../AdminScreen/adminscreen\";\r\nconst Stack = createStackNavigator();\r\nexport default function Home() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"login\" headerMode={\"none\"}>\r\n        <Stack.Screen name=\"login\" component={Loginser} />\r\n        <Stack.Screen\r\n          name=\"vote\"\r\n          component={Vote}\r\n          options={{ ...TransitionPresets.FadeFromBottomAndroid }}\r\n        />\r\n        <Stack.Screen name=\"register\" component={Register} />\r\n        <Stack.Screen name=\"forgotpass\" component={ForgotPass} />\r\n        <Stack.Screen name=\"admin\" component={admin} />\r\n        <Stack.Screen name=\"adminscreen\" component={adminscreen} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport Loginser from \"./Login/login\";\nimport Home from \"./Home/Home\";\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Home></Home>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    justifyContent: \"center\",\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}